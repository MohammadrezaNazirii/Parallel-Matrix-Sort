==PROF== Connected to process 19654 (/home/amir/Desktop/HWGPU/sort_int)
==PROF== Profiling "sortRows(int *, int, int)" - 0: 0%....50%....100% - 8 passes
==PROF== Profiling "sortColumns" - 1: 0%....50%....100% - 8 passes
==PROF== Profiling "sortRows(int *, int, int)" - 2: 0%....50%....100% - 8 passes
==PROF== Profiling "sortColumns" - 3: 0%....50%....100% - 8 passes
2234.937500
==PROF== Disconnected from process 19654
[19654] sort_int@127.0.0.1
  sortRows(int *, int, int) (64, 1, 1)x(16, 1, 1), Context 1, Stream 13, Device 0, CC 8.9
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- --------------
    Metric Name             Metric Unit   Metric Value
    ----------------------- ----------- --------------
    DRAM Frequency                  Ghz           7.99
    SM Frequency                    Ghz           1.92
    Elapsed Cycles                cycle    153,283,511
    Memory Throughput                 %          45.32
    DRAM Throughput                   %           0.02
    Duration                         ms          79.84
    L1/TEX Cache Throughput           %          48.34
    L2 Cache Throughput               %          38.85
    SM Active Cycles              cycle 145,685,743.17
    Compute (SM) Throughput           %           7.29
    ----------------------- ----------- --------------

    OPT   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    16
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                     64
    Registers Per Thread             register/thread              26
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              24
    Threads                                   thread           1,024
    Uses Green Context                                             0
    Waves Per SM                                                0.11
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     
          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       
          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      
          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      
          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     
          kernels that frequently call __syncthreads(). See the Hardware Model                                          
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           24
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           32
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           24
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %         5.58
    Achieved Active Warps Per SM           warp         2.68
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.83%                                                                                    
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (5.6%) can be the       
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Local Speedup: 50%                                                                                       
          The 6.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- --------------
    Metric Name                Metric Unit   Metric Value
    -------------------------- ----------- --------------
    Average DRAM Active Cycles       cycle        132,956
    Total DRAM Elapsed Cycles        cycle  2,552,492,032
    Average L1 Active Cycles         cycle 145,685,743.17
    Total L1 Elapsed Cycles          cycle  3,677,670,568
    Average L2 Active Cycles         cycle    139,901,422
    Total L2 Elapsed Cycles          cycle  2,318,363,600
    Average SM Active Cycles         cycle 145,685,743.17
    Total SM Elapsed Cycles          cycle  3,677,670,568
    Average SMSP Active Cycles       cycle     97,633,059
    Total SMSP Elapsed Cycles        cycle 14,710,682,272
    -------------------------- ----------- --------------

    OPT   Est. Speedup: 23.12%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 36.29% above the average, while the minimum instance value is 100.00% below the average.    

  sortColumns(int *, int, int, bool *) (64, 1, 1)x(16, 1, 1), Context 1, Stream 13, Device 0, CC 8.9
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- --------------
    Metric Name             Metric Unit   Metric Value
    ----------------------- ----------- --------------
    DRAM Frequency                  Ghz           7.99
    SM Frequency                    Ghz           1.92
    Elapsed Cycles                cycle    130,098,861
    Memory Throughput                 %           6.98
    DRAM Throughput                   %           0.03
    Duration                         ms          67.76
    L1/TEX Cache Throughput           %           7.85
    L2 Cache Throughput               %           5.40
    SM Active Cycles              cycle 115,630,105.08
    Compute (SM) Throughput           %           6.98
    ----------------------- ----------- --------------

    OPT   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    16
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                     64
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              24
    Threads                                   thread           1,024
    Uses Green Context                                             0
    Waves Per SM                                                0.11
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     
          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       
          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      
          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      
          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     
          kernels that frequently call __syncthreads(). See the Hardware Model                                          
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           24
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           32
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           24
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %         5.51
    Achieved Active Warps Per SM           warp         2.64
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.98%                                                                                    
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (5.5%) can be the       
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Local Speedup: 50%                                                                                       
          The 6.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- --------------
    Metric Name                Metric Unit   Metric Value
    -------------------------- ----------- --------------
    Average DRAM Active Cycles       cycle        146,012
    Total DRAM Elapsed Cycles        cycle  2,166,419,456
    Average L1 Active Cycles         cycle 115,630,105.08
    Total L1 Elapsed Cycles          cycle  3,122,612,680
    Average L2 Active Cycles         cycle  69,858,642.12
    Total L2 Elapsed Cycles          cycle  1,967,745,200
    Average SM Active Cycles         cycle 115,630,105.08
    Total SM Elapsed Cycles          cycle  3,122,612,680
    Average SMSP Active Cycles       cycle  76,523,279.85
    Total SMSP Elapsed Cycles        cycle 12,490,450,720
    -------------------------- ----------- --------------

    OPT   Est. Speedup: 9.934%                                                                                          
          One or more SMs have a much higher number of active cycles than the average number of active cycles.          
          Additionally, other SMs have a much lower number of active cycles than the average number of active cycles.   
          Maximum instance value is 11.18% above the average, while the minimum instance value is 11.07% below the      
          average.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 24.23%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 41.20% above the average, while the minimum instance value is 100.00% below the average.    
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 9.934%                                                                                          
          One or more L1 Slices have a much higher number of active cycles than the average number of active cycles.    
          Additionally, other L1 Slices have a much lower number of active cycles than the average number of active     
          cycles. Maximum instance value is 11.18% above the average, while the minimum instance value is 11.07% below  
          the average.                                                                                                  

  sortRows(int *, int, int) (64, 1, 1)x(16, 1, 1), Context 1, Stream 13, Device 0, CC 8.9
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- -------------
    Metric Name             Metric Unit  Metric Value
    ----------------------- ----------- -------------
    DRAM Frequency                  Ghz          7.99
    SM Frequency                    Ghz          1.92
    Elapsed Cycles                cycle    67,116,089
    Memory Throughput                 %         70.77
    DRAM Throughput                   %          0.05
    Duration                         ms         34.96
    L1/TEX Cache Throughput           %         73.90
    L2 Cache Throughput               %          4.14
    SM Active Cycles              cycle 64,257,947.21
    Compute (SM) Throughput           %         16.65
    ----------------------- ----------- -------------

    OPT   Memory is more heavily utilized than Compute: Look at the Memory Workload Analysis section to identify the L1 
          bottleneck. Check memory replay (coalescing) metrics to make sure you're efficiently utilizing the bytes      
          transferred. Also consider whether it is possible to do more work per memory access (kernel fusion) or        
          whether there are values you can (re)compute.                                                                 

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    16
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                     64
    Registers Per Thread             register/thread              26
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              24
    Threads                                   thread           1,024
    Uses Green Context                                             0
    Waves Per SM                                                0.11
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     
          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       
          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      
          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      
          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     
          kernels that frequently call __syncthreads(). See the Hardware Model                                          
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           24
    Block Limit Registers                 block           64
    Block Limit Shared Mem                block           32
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           24
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %         5.61
    Achieved Active Warps Per SM           warp         2.69
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 88.78%                                                                                    
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (5.6%) can be the       
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Local Speedup: 50%                                                                                       
          The 6.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- -------------
    Metric Name                Metric Unit  Metric Value
    -------------------------- ----------- -------------
    Average DRAM Active Cycles       cycle       136,536
    Total DRAM Elapsed Cycles        cycle 1,117,623,296
    Average L1 Active Cycles         cycle 64,257,947.21
    Total L1 Elapsed Cycles          cycle 1,610,409,488
    Average L2 Active Cycles         cycle 39,840,282.12
    Total L2 Elapsed Cycles          cycle 1,015,119,216
    Average SM Active Cycles         cycle 64,257,947.21
    Total SM Elapsed Cycles          cycle 1,610,409,488
    Average SMSP Active Cycles       cycle 43,242,353.81
    Total SMSP Elapsed Cycles        cycle 6,441,637,952
    -------------------------- ----------- -------------

    OPT   Est. Speedup: 22.91%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 35.54% above the average, while the minimum instance value is 100.00% below the average.    

  sortColumns(int *, int, int, bool *) (64, 1, 1)x(16, 1, 1), Context 1, Stream 13, Device 0, CC 8.9
    Section: GPU Speed Of Light Throughput
    ----------------------- ----------- --------------
    Metric Name             Metric Unit   Metric Value
    ----------------------- ----------- --------------
    DRAM Frequency                  Ghz           7.99
    SM Frequency                    Ghz           1.92
    Elapsed Cycles                cycle    119,455,255
    Memory Throughput                 %           7.60
    DRAM Throughput                   %           0.03
    Duration                         ms          62.22
    L1/TEX Cache Throughput           %           8.42
    L2 Cache Throughput               %           1.37
    SM Active Cycles              cycle 107,906,992.46
    Compute (SM) Throughput           %           7.60
    ----------------------- ----------- --------------

    OPT   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    Section: Launch Statistics
    -------------------------------- --------------- ---------------
    Metric Name                          Metric Unit    Metric Value
    -------------------------------- --------------- ---------------
    Block Size                                                    16
    Function Cache Configuration                     CachePreferNone
    Grid Size                                                     64
    Registers Per Thread             register/thread              40
    Shared Memory Configuration Size           Kbyte           32.77
    Driver Shared Memory Per Block       Kbyte/block            1.02
    Dynamic Shared Memory Per Block       byte/block               0
    Static Shared Memory Per Block        byte/block               0
    # SMs                                         SM              24
    Threads                                   thread           1,024
    Uses Green Context                                             0
    Waves Per SM                                                0.11
    -------------------------------- --------------- ---------------

    OPT   Est. Speedup: 50%                                                                                             
          Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 16     
          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       
          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      
          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      
          large thread block per multiprocessor if latency affects performance.  This is particularly beneficial to     
          kernels that frequently call __syncthreads(). See the Hardware Model                                          
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more      
          details on launch configurations.                                                                             

    Section: Occupancy
    ------------------------------- ----------- ------------
    Metric Name                     Metric Unit Metric Value
    ------------------------------- ----------- ------------
    Block Limit SM                        block           24
    Block Limit Registers                 block           48
    Block Limit Shared Mem                block           32
    Block Limit Warps                     block           48
    Theoretical Active Warps per SM        warp           24
    Theoretical Occupancy                     %           50
    Achieved Occupancy                        %         5.47
    Achieved Active Warps Per SM           warp         2.62
    ------------------------------- ----------- ------------

    OPT   Est. Local Speedup: 89.07%                                                                                    
          The difference between calculated theoretical (50.0%) and measured achieved occupancy (5.5%) can be the       
          result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can   
          occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices   
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Local Speedup: 50%                                                                                       
          The 6.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 12. This kernel's theoretical occupancy (50.0%) is limited by the number of blocks that   
          can fit on the SM.                                                                                            

    Section: GPU and Memory Workload Distribution
    -------------------------- ----------- --------------
    Metric Name                Metric Unit   Metric Value
    -------------------------- ----------- --------------
    Average DRAM Active Cycles       cycle        135,572
    Total DRAM Elapsed Cycles        cycle  1,989,180,416
    Average L1 Active Cycles         cycle 107,906,992.46
    Total L1 Elapsed Cycles          cycle  2,868,171,400
    Average L2 Active Cycles         cycle  41,270,164.31
    Total L2 Elapsed Cycles          cycle  1,806,754,112
    Average SM Active Cycles         cycle 107,906,992.46
    Total SM Elapsed Cycles          cycle  2,868,171,400
    Average SMSP Active Cycles       cycle  70,815,942.88
    Total SMSP Elapsed Cycles        cycle 11,472,685,600
    -------------------------- ----------- --------------

    OPT   Est. Speedup: 8.784%                                                                                          
          One or more SMs have a much higher number of active cycles than the average number of active cycles.          
          Additionally, other SMs have a much lower number of active cycles than the average number of active cycles.   
          Maximum instance value is 9.73% above the average, while the minimum instance value is 10.86% below the       
          average.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 24.12%                                                                                          
          One or more SMSPs have a much lower number of active cycles than the average number of active cycles. Maximum 
          instance value is 40.70% above the average, while the minimum instance value is 100.00% below the average.    
    ----- --------------------------------------------------------------------------------------------------------------
    OPT   Est. Speedup: 8.784%                                                                                          
          One or more L1 Slices have a much higher number of active cycles than the average number of active cycles.    
          Additionally, other L1 Slices have a much lower number of active cycles than the average number of active     
          cycles. Maximum instance value is 9.73% above the average, while the minimum instance value is 10.86% below   
          the average.                                                                                                  

